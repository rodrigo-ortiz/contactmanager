{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","react_default","a","createElement","className","href","Link","to","defaultProps","About","ContactContext","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","then","res","onShowClick","e","console","log","_this2","info","name","phone","email","style","cursor","onClick","bind","float","color","marginRight","Contacts","deleteContact","newContacts","Fragment","map","c","i","contacts_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","preventDefault","_this$state","uuid","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","match","params","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42471484.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nconst Header = props => {\n    const { title } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\" >\n        <div className=\"container\" >\n            <a href=\"#\" className=\"navbar-brand\" >{title}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\" >\n                    <li className=\"nav-item\" >\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\"></i>\n                            Inicio\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\" >\n                        <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas fa-plus\"></i>\n                            Agregar\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\" >\n                        <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-info\"></i>\n                            Acerca\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        \n    </nav>\n  )\n}\n\n\nHeader.defaultProps = {\n    title : \"Mi Grandiosa Agenda\"\n}\n\nHeader.propTypes = {\n    title : PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\" >Contactame</h1>\n      <p className=\"lead\" >Simple App, para administrar contactos</p>\n      <p className=\"text-seconday\" >Version App 1.0</p>\n    </div>\n  )\n}\n\nexport default About","import React, { Component } from \"react\";\nimport axios from 'axios'\n\nconst ContactContext = React.createContext();\nconst reducer = (state, action) =>{\n    //console.log(' Action ', action)\n    switch(action.type){\n        case 'DELETE_CONTACT' :\n            return {\n                ...state,\n                contacts : state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT' : \n            return {\n              ...state ,\n              contacts : [action.payload, ...state.contacts]\n            }\n        default:\n            return state\n    }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts : [],\n    dispatch : action => this.setState(state => reducer(state, action))\n  }\n\n  async componentDidMount(){\n    const contacts = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      contacts : contacts.data\n    })\n    \n  }\n\n\n  render(){\n      return(\n        <ContactContext.Provider value={this.state}>\n            {this.props.children}\n        </ContactContext.Provider>\n      )\n  }\n}\n\nexport  const Consumer = ContactContext.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = (id, dispatch) => {\n    //this.props.deleteClickHandler();\n    //console.log('Click', id, dispatch)\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    .then(res => dispatch({type : 'DELETE_CONTACT', payload : id}))\n  };\n\n  onShowClick = e => {\n    const { showContactInfo } = this.state;\n    console.log(\" Click\");\n    this.setState({ showContactInfo: !showContactInfo });\n  };\n\n  render() {\n    const { info } = this.props;\n    const { name, phone, email, id } = info;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value \n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                />\n                <i\n                  className=\"fas fa-times\"\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n\n                <Link to={`contact/edit/${id}`} >\n                  <i \n                    className=\"fas fa-pencil-alt\" \n                    style={{\n                        float   : 'right', \n                        cursor  : 'pointer',\n                        color   : '#000',\n                        marginRight : '1em'\n                      }}\n                    ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email : {email}</li>\n                  <li className=\"list-group-item\">Telefono : {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  info: PropTypes.object.isRequired,\n  deleteClickHandler: PropTypes.func.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n\n  deleteContact = (id) =>{\n      const { contacts } = this.state;\n\n      const newContacts = contacts.filter(contact => contact.id !== id);\n\n      this.setState({\n          contacts : newContacts\n      })\n      //console.log(' Contacts ', newContacts)\n  }\n\n  render() {\n      return (\n          <Consumer>\n              {value => {\n                  const { contacts } = value;\n                  console.log(' Value ', value );\n                  return (\n                    \n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\" >Lista de Contactos</h1>\n                    {contacts.map((c,i) =>{\n                        return <Contact \n                            key={c.id} \n                            info={c} \n                            deleteClickHandler={this.deleteContact.bind(this, c.id)} />\n                    })}\n                    </React.Fragment>\n                      \n                  )\n              }}\n          </Consumer>\n      )\n    \n  }\n}\n\nexport default Contacts;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error \n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', \n        {'is-invalid': error})}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\n\nTextInputGroup.propTypes = {\n    name : PropTypes.string.isRequired,\n    placeholder : PropTypes.string.isRequired,\n    value : PropTypes.string.isRequired,\n    type : PropTypes.string.isRequired,\n    onChange : PropTypes.func.isRequired,\n    label : PropTypes.string.isRequired,\n    error : PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps = {\n    type : 'text'\n}\n\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from 'uuid'\nimport TextInputGroup from \"../layout/TextInputGroup\";\nclass AddContact extends Component {\n  state = {\n    name  : \"\",\n    email : \"\",\n    phone : \"\",\n    errors: {}\n\n  };\n\n  onSubmit = ( dispatch, e ) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Revisamos Errores\n    if(name === ''){\n      this.setState({\n        errors : {name : 'Nombre es Requerido'}\n      })\n      return \n    }\n\n    if(email === ''){\n      this.setState({\n        errors : {email : 'Correo Electronico es Requerido'}\n      })\n\n      return\n    }\n\n    if(phone === ''){\n      this.setState({\n        errors : {phone : 'Número Telefonico es Requerido'}\n      })\n      return\n    }\n\n    const newContact = {\n      id : uuid(),\n      name,\n      email,\n      phone \n    }\n\n    dispatch({ type : 'ADD_CONTACT', payload : newContact})\n\n    this.setState({\n      name : '',\n      email : '',\n      phone : '',\n    })\n\n\n    this.props.history.push(\"/\")\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value ;\n          \n          return (\n            <article className=\"card mb-3\">\n              <header className=\"card-header\">Agregar Contacto</header>\n\n              <aside className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  \n                  <TextInputGroup \n                    label={\"Nombre\"}\n                    name={\"name\"}\n                    value={name}\n                    type={\"text\"}\n                    placeholder={\"Ingresa Nombre\"}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label={\"Correo Electronico\"}\n                    name={\"email\"}\n                    value={email}\n                    type={\"email\"}\n                    placeholder={\"Ingresa Correo Electronico\"}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label={\"Número Telefonico\"}\n                    name={\"phone\"}\n                    value={phone}\n                    type={\"tel\"}\n                    placeholder={\"Ingresa Número Telefonico\"}\n                    onChange={this.onChange}\n                    error={errors.phone}\n\n                  />\n\n\n                  <input\n                    type=\"submit\"\n                    value=\"Agregar Contacto\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </aside>\n            </article>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from 'uuid'\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nclass EditContact extends Component {\n  state = {\n    name  : \"\",\n    email : \"\",\n    phone : \"\",\n    errors: {}\n\n  };\n\n  async componentDidMount(){\n\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n    this.setState({\n        name : res.data.name ,\n        email : res.data.email ,\n        phone : res.data.phone ,\n    })\n    console.log(' User', res.data)\n\n  }\n\n  onSubmit = ( dispatch, e ) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Revisamos Errores\n    if(name === ''){\n      this.setState({\n        errors : {name : 'Nombre es Requerido'}\n      })\n      return \n    }\n\n    if(email === ''){\n      this.setState({\n        errors : {email : 'Correo Electronico es Requerido'}\n      })\n\n      return\n    }\n\n    if(phone === ''){\n      this.setState({\n        errors : {phone : 'Número Telefonico es Requerido'}\n      })\n      return\n    }\n\n    const newContact = {\n      id : uuid(),\n      name,\n      email,\n      phone \n    }\n\n\n    this.setState({\n      name : '',\n      email : '',\n      phone : '',\n    })\n\n\n    this.props.history.push(\"/\")\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value ;\n          \n          return (\n            <article className=\"card mb-3\">\n              <header className=\"card-header\">Editar Contacto</header>\n\n              <aside className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  \n                  <TextInputGroup \n                    label={\"Nombre\"}\n                    name={\"name\"}\n                    value={name}\n                    type={\"text\"}\n                    placeholder={\"Ingresa Nombre\"}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label={\"Correo Electronico\"}\n                    name={\"email\"}\n                    value={email}\n                    type={\"email\"}\n                    placeholder={\"Ingresa Correo Electronico\"}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label={\"Número Telefonico\"}\n                    name={\"phone\"}\n                    value={phone}\n                    type={\"tel\"}\n                    placeholder={\"Ingresa Número Telefonico\"}\n                    onChange={this.onChange}\n                    error={errors.phone}\n\n                  />\n\n\n                  <input\n                    type=\"submit\"\n                    value=\"Editar Contacto\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </aside>\n            </article>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\" >404 página no encontrada</h1>\n      <p className=\"lead\" >\n        Lo sentimos la pagina que buscas no existe\n      </p>\n    </div>\n  )\n}\n\n\nexport default NotFound","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport About from './components/pages/About'\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router  >\n          <div className=\"App\">\n            <Header title={\"Agenda App\"} />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}  />\n                <Route exact path=\"/contact/add\" component={AddContact}  />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}  />\n                <Route exact path=\"/about\" component={About}  />\n                <Route component={NotFound}  />\n                \n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}